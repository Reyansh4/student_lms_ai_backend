"""Make created_by nullable in activity

Revision ID: e4427ebc57e9
Revises: e06be39f2403
Create Date: 2025-07-01 21:07:12.363228

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4427ebc57e9'
down_revision: Union[str, None] = 'e06be39f2403'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('agents')
    op.drop_table('activity_templates')
    op.drop_table('agent_api_access')
    op.drop_table('agent_documents')
    op.drop_table('agent_conversations')
    op.drop_table('agent_messages')
    op.alter_column('activity', 'created_by',
               existing_type=sa.UUID(),
               nullable=True)
    op.add_column('permissions', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('role_permissions', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('role_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('role_permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.add_column('activity', sa.Column('status', sa.String(length=20), nullable=True))
    op.execute("UPDATE activity SET status = 'pending' WHERE status IS NULL")
    op.alter_column('activity', 'status', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('roles', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('roles', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('role_permissions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('role_permissions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('role_permissions', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('permissions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('permissions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('permissions', 'is_active')
    op.alter_column('activity', 'created_by',
               existing_type=sa.UUID(),
               nullable=False)
    op.create_table('agent_messages',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('conversation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('USER', 'ASSISTANT', 'SYSTEM', 'FUNCTION', name='messagerole'), autoincrement=False, nullable=False),
    sa.Column('message_type', postgresql.ENUM('TEXT', 'API_CALL', 'DOCUMENT_REFERENCE', 'INTERNET_SEARCH', 'CROSS_QUESTION', name='messagetype'), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('context_references', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embeddings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('processed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agent_messages_pkey')
    )
    op.create_table('agent_conversations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('context_summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_messages', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversation_memory', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('context_embeddings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_activity', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], name='agent_conversations_agent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='agent_conversations_pkey')
    )
    op.create_table('agent_documents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('document_type', postgresql.ENUM('PDF', 'DOCX', 'TXT', 'CSV', 'JSON', 'URL', 'MARKDOWN', name='documenttype'), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_processed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('embeddings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('chunks', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mime_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('processed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agent_documents_pkey')
    )
    op.create_table('agent_api_access',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('api_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('api_endpoint', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('api_method', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('auth_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('auth_credentials', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('allowed_operations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('rate_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agent_api_access_pkey')
    )
    op.create_table('activity_templates',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sub_category_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('difficulty_level', postgresql.ENUM('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), autoincrement=False, nullable=False),
    sa.Column('access_type', postgresql.ENUM('PRIVATE', 'GLOBAL', name='accesstype'), autoincrement=False, nullable=False),
    sa.Column('final_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['activity_categories.id'], name='activity_templates_category_id_fkey'),
    sa.ForeignKeyConstraint(['sub_category_id'], ['activity_sub_categories.id'], name='activity_templates_sub_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_templates_pkey')
    )
    op.create_table('agents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('agent_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('has_api_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_conversation_memory', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_document_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_internet_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_cross_questioning', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('system_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('capabilities_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('memory_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agents_pkey')
    )
    # ### end Alembic commands ###
