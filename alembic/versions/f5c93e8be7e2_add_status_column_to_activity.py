"""Add status column to activity

Revision ID: f5c93e8be7e2
Revises: e4427ebc57e9
Create Date: 2025-07-02 22:53:17.021624

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f5c93e8be7e2'
down_revision: Union[str, None] = 'e4427ebc57e9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('agents')
    op.drop_table('activity_templates')
    op.add_column('activity', sa.Column('status', sa.String(length=20), nullable=False))
    op.alter_column('activity', 'created_by',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('activity', 'created_by',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('activity', 'status')
    op.create_table('activity_templates',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sub_category_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('difficulty_level', postgresql.ENUM('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), autoincrement=False, nullable=False),
    sa.Column('access_type', postgresql.ENUM('PRIVATE', 'GLOBAL', name='accesstype'), autoincrement=False, nullable=False),
    sa.Column('final_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['activity_categories.id'], name='activity_templates_category_id_fkey'),
    sa.ForeignKeyConstraint(['sub_category_id'], ['activity_sub_categories.id'], name='activity_templates_sub_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_templates_pkey')
    )
    op.create_table('agents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('agent_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('has_api_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_conversation_memory', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_document_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_internet_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_cross_questioning', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('system_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('capabilities_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('memory_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agents_pkey')
    )
    # ### end Alembic commands ###
